// Code generated by MockGen. DO NOT EDIT.
// Source: ./sender/sender.go

// Package mock_sender is a generated GoMock package.
package mock_sender

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockVMCSender is a mock of VMCSender interface.
type MockVMCSender struct {
	ctrl     *gomock.Controller
	recorder *MockVMCSenderMockRecorder
}

// MockVMCSenderMockRecorder is the mock recorder for MockVMCSender.
type MockVMCSenderMockRecorder struct {
	mock *MockVMCSender
}

// NewMockVMCSender creates a new mock instance.
func NewMockVMCSender(ctrl *gomock.Controller) *MockVMCSender {
	mock := &MockVMCSender{ctrl: ctrl}
	mock.recorder = &MockVMCSenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVMCSender) EXPECT() *MockVMCSenderMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockVMCSender) Send(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockVMCSenderMockRecorder) Send(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockVMCSender)(nil).Send), arg0, arg1)
}
